import random
import streamlit as st
import matplotlib.pyplot as plt
import matplotlib.patches as patches

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
dice_faces = [
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á", "color": "green", "faces": [-1, -1, 0, 0, 1, 1]},
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå", "color": "gold", "faces": [-2, -1, 0, 0, 1, 2]},
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡∏Ñ‡∏°‡∏ô‡∏≤‡∏Ñ‡∏°", "color": "orange", "faces": [-3, -2, -1, 1, 2, 3]},
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", "color": "red", "faces": [-7, -3, -2, 2, 3, 7]},
]

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö
if "current_index" not in st.session_state:
    st.session_state.current_index = 0

if "history" not in st.session_state:
    st.session_state.history = []

# ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô string ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ + ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏ß‡∏Å
def format_face(face):
    if face > 0:
        return f"+{face}"
    else:
        return str(face)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏≤‡∏î‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
def draw_dice(face, color):
    fig, ax = plt.subplots(figsize=(2, 2))
    ax.set_xlim(0, 1)
    ax.set_ylim(0, 1)
    ax.axis("off")
    
    rect = patches.FancyBboxPatch((0.1, 0.1), 0.8, 0.8,
                                   boxstyle="round,pad=0.1",
                                   edgecolor="black",
                                   facecolor=color,
                                   linewidth=2)
    ax.add_patch(rect)
    ax.text(0.5, 0.5, format_face(face),
            fontsize=24, ha="center", va="center", color="black")
    
    return fig

# UI
st.set_page_config(page_title="‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏ó‡∏µ‡∏•‡∏∞‡∏•‡∏π‡∏Å", layout="centered")
st.title("üé≤  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏±‡∏ô‡∏ú‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô")

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
if st.button("üé≤ ‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤!"):
    i = st.session_state.current_index
    dice = dice_faces[i]
    face = random.choice(dice["faces"])
    
    st.session_state.history.append((dice["name"], face, dice["color"]))
    
    st.session_state.current_index = (i + 1) % len(dice_faces)

# ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
if st.session_state.history:
    name, face, color = st.session_state.history[-1]
    st.subheader(f"üéØ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {name}")
    st.pyplot(draw_dice(face, color))

    with st.expander("üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏±‡∏ô‡∏ú‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", expanded=True):
        for idx, (n, f, c) in enumerate(reversed(st.session_state.history), 1):
            st.markdown(f"{idx}. **{n}**: `{format_face(f)}`")

else:
    st.info("‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤")

