import random
import streamlit as st
import matplotlib.pyplot as plt
import matplotlib.patches as patches
from io import BytesIO

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
dice_faces = [
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á", "color": "green", "faces": [-1, -1, 0, 0, 1, 1]},
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå", "color": "gold", "faces": [-2, -1, 0, 0, 1, 2]},
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡∏Ñ‡∏°‡∏ô‡∏≤‡∏Ñ‡∏°", "color": "orange", "faces": [-3, -2, -1, 1, 2, 3]},
    {"name": "‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", "color": "red", "faces": [-7, -3, -2, 2, 3, 7]},
]

# Session state ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
if "current_index" not in st.session_state:
    st.session_state.current_index = 0

if "history" not in st.session_state:
    st.session_state.history = []

# ‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏ï‡πâ‡∏°‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ +
def format_face(face):
    return f"+{face}" if face > 0 else str(face)

# ‡∏ß‡∏≤‡∏î‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏û
def draw_dice(face, color):
    fig, ax = plt.subplots(figsize=(1.2, 1.2), dpi=100)
    ax.set_xlim(0, 1)
    ax.set_ylim(0, 1)
    ax.axis("off")

    rect = patches.FancyBboxPatch((0.1, 0.1), 0.8, 0.8,
                                   boxstyle="round,pad=0.1",
                                   edgecolor="black",
                                   facecolor=color,
                                   linewidth=1.5)
    ax.add_patch(rect)
    ax.text(0.5, 0.5, format_face(face),
            fontsize=14, ha="center", va="center", color="black", fontweight='bold')

    buf = BytesIO()
    fig.savefig(buf, format="png", bbox_inches="tight", transparent=False)
    buf.seek(0)
    plt.close(fig)
    return buf

# UI
st.set_page_config(page_title="‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤", layout="centered")
st.title("üé≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏±‡∏ô‡∏ú‡∏ß‡∏ô‡∏ï‡∏•‡∏≤‡∏î")
st.markdown("üéØ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: **‡πÅ‡∏ó‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡πÜ‡πÜ‡πÜ‡πÄ‡∏î‡πâ‡∏≠**")

# ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
with st.form(key="roll_form"):
    submit_button = st.form_submit_button(label="üé≤ ‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤!")
    if submit_button:
        i = st.session_state.current_index
        dice = dice_faces[i]
        face = random.choice(dice["faces"])
        st.session_state.history.append((dice["name"], face, dice["color"]))
        st.session_state.current_index = (i + 1) % len(dice_faces)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
if st.session_state.history:
    name, face, color = st.session_state.history[-1]
    st.subheader(f"üéØ {name} üéØ")
    st.image(draw_dice(face, color), width=120)

    with st.expander("üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", expanded=True):
        for idx, (n, f, c) in enumerate(reversed(st.session_state.history), 1):
            st.markdown(f"{idx}. **{n}**: `{format_face(f)}`")
else:
    st.info("‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤")




